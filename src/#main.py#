#!bin/env python


import requests as r
import json
def main():

    url = 'https://parseapi.back4app.com/classes/Country?limit=10&include=continent&keys=name,capital,continent,continent.name'
    

    headers = {
        'X-Parse-Application-Id': 'mxsebv4KoWIGkRntXwyzg6c6DhKWQuit8Ry9sHja',
    'X-Parse-Master-Key': 'TpO0j3lG2PmEVMXlKYQACoOXKQrL3lwM0HwR9dbH'}
    
    try:
        response = r.get(url, headers=headers)

        if response.status_code == 200:
            response = response.json()
            
        else:
            print('Error: ', response.status_code)
            return None

    except requests.exceptions.RequestException as b:
        print('Error: ', b)
        return None


    continent_count = {"North America": 0, "South America": 0, "Europe": 0, "Africa": 0, "Asia": 0, "Antarctica": 0, "Australia": 0, "Oceania": 0}
    for country in response['results']:
        continent_count[country['continent']['name']] += 1


    country_info = open('countries.json', 'w')                              
    country_info.write(f"{json.dumps(continent_count, indent=2)}")          
    country_info.close()                                                    

    country_count = 0
    for country in response['results']:
        if "y" in country['name']:
            country_count += 1

    country_name = open('countries_with_y.json', 'w')
    country_name.write(f"{country_count}")
    country_name.close()

   # print(json.dumps(response, indent=4))
    countries_e_cap = dict()
    for country in response['results']:
        capital = country['capital']
        if 'e' in capital:
            capital = country['capital']
            country_name = country['name']
            countries_e_cap.update({country_name: capital})

            if len(countries_e_cap) == 6:
                break
            
    capital_name = open('6_countries_with_e.json', 'w')
    capital_name.write(f"{json.dumps(countries_e_cap, indent=4)}")
    capital_name.close()
    


    

    
    




if __name__ == "__main__":
    main()

